Terminals unused in grammar

   ERROR


State 103 conflicts: 10 reduce/reduce
State 127 conflicts: 9 shift/reduce
State 139 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | error

    7 feature_list: no_empty_feature_list
    8             | %empty

    9 no_empty_feature_list: feature ';'
   10                      | feature ';' no_empty_feature_list

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' no_empty_expr '}'
   12        | OBJECTID ':' TYPEID
   13        | OBJECTID ':' TYPEID ASSIGN no_empty_expr
   14        | error

   15 formal_list: no_empty_formal_list
   16            | %empty

   17 no_empty_formal_list: formal
   18                     | no_empty_formal_list ',' formal

   19 formal: OBJECTID ':' TYPEID

   20 expression_list: no_empty_expr
   21                | expression_list ',' no_empty_expr
   22                | %empty

   23 block: no_empty_expr ';'
   24      | block no_empty_expr ';'

   25 case_list: branch ';'
   26          | case_list branch ';'

   27 branch: OBJECTID ':' TYPEID DARROW no_empty_expr

   28 let_: OBJECTID ':' TYPEID IN no_empty_expr
   29     | OBJECTID ':' TYPEID ASSIGN no_empty_expr IN no_empty_expr
   30     | OBJECTID ':' TYPEID ',' let_
   31     | OBJECTID ':' TYPEID ASSIGN no_empty_expr ',' let_

   32 no_empty_expr: OBJECTID ASSIGN no_empty_expr
   33              | no_empty_expr '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr '@' TYPEID '.' OBJECTID '(' expression_list ')'
   35              | OBJECTID '(' expression_list ')'
   36              | IF no_empty_expr THEN no_empty_expr ELSE no_empty_expr FI
   37              | WHILE no_empty_expr LOOP no_empty_expr POOL
   38              | WHILE no_empty_expr LOOP error
   39              | '{' block '}'
   40              | LET let_
   41              | CASE no_empty_expr OF case_list ESAC
   42              | NEW TYPEID
   43              | ISVOID no_empty_expr
   44              | no_empty_expr '+' no_empty_expr
   45              | no_empty_expr '-' no_empty_expr
   46              | no_empty_expr '*' no_empty_expr
   47              | no_empty_expr '/' no_empty_expr
   48              | '~' no_empty_expr
   49              | no_empty_expr '<' no_empty_expr
   50              | no_empty_expr LE no_empty_expr
   51              | no_empty_expr '=' no_empty_expr
   52              | NOT no_empty_expr
   53              | '(' no_empty_expr ')'
   54              | OBJECTID
   55              | INT_CONST
   56              | STR_CONST
   57              | BOOL_CONST
   58              | error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 33 34 35 53
')' (41) 11 33 34 35 53
'*' (42) 46
'+' (43) 44
',' (44) 18 21 30 31
'-' (45) 45
'.' (46) 33 34
'/' (47) 47
':' (58) 11 12 13 19 27 28 29 30 31
';' (59) 4 5 9 10 23 24 25 26
'<' (60) 49
'=' (61) 51
'@' (64) 34
'{' (123) 4 5 11 39
'}' (125) 4 5 11 39
'~' (126) 48
error (256) 6 14 38 58
CLASS (258) 4 5
ELSE (259) 36
FI (260) 36
IF (261) 36
IN (262) 28 29
INHERITS (263) 5
LET (264) 40
LOOP (265) 37 38
POOL (266) 37
THEN (267) 36
WHILE (268) 37 38
CASE (269) 41
ESAC (270) 41
OF (271) 41
DARROW (272) 27
NEW (273) 42
ISVOID (274) 43
STR_CONST (275) 56
INT_CONST (276) 55
BOOL_CONST (277) 57
TYPEID (278) 4 5 11 12 13 19 27 28 29 30 31 34 42
OBJECTID (279) 11 12 13 19 27 28 29 30 31 32 33 34 35 54
ASSIGN (280) 13 29 31 32
NOT (281) 52
LE (282) 50
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5 6, on right: 2 3
feature_list (49)
    on left: 7 8, on right: 4 5
no_empty_feature_list (50)
    on left: 9 10, on right: 7 10
feature (51)
    on left: 11 12 13 14, on right: 9 10
formal_list (52)
    on left: 15 16, on right: 11
no_empty_formal_list (53)
    on left: 17 18, on right: 15 18
formal (54)
    on left: 19, on right: 17 18
expression_list (55)
    on left: 20 21 22, on right: 21 33 34 35
block (56)
    on left: 23 24, on right: 24 39
case_list (57)
    on left: 25 26, on right: 26 41
branch (58)
    on left: 27, on right: 25 26
let_ (59)
    on left: 28 29 30 31, on right: 30 31 40
no_empty_expr (60)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 55 56 57 58, on right: 11 13 20 21 23 24 27 28 29
    31 32 33 34 36 37 38 41 43 44 45 46 47 48 49 50 51 52 53


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


State 1

    6 class: error .

    $default  reduce using rule 6 (class)


State 2

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: class_list .
    3 class_list: class_list . class

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 1 (program)

    class  go to state 8


State 5

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


State 6

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


State 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 11


State 10

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 12
    OBJECTID  shift, and go to state 13

    '}'  reduce using rule 8 (feature_list)

    feature_list           go to state 14
    no_empty_feature_list  go to state 15
    feature                go to state 16


State 11

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 17


State 12

   14 feature: error .

    $default  reduce using rule 14 (feature)


State 13

   11 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' no_empty_expr '}'
   12        | OBJECTID . ':' TYPEID
   13        | OBJECTID . ':' TYPEID ASSIGN no_empty_expr

    '('  shift, and go to state 18
    ':'  shift, and go to state 19


State 14

    4 class: CLASS TYPEID '{' feature_list . '}' ';'

    '}'  shift, and go to state 20


State 15

    7 feature_list: no_empty_feature_list .

    $default  reduce using rule 7 (feature_list)


State 16

    9 no_empty_feature_list: feature . ';'
   10                      | feature . ';' no_empty_feature_list

    ';'  shift, and go to state 21


State 17

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 12
    OBJECTID  shift, and go to state 13

    '}'  reduce using rule 8 (feature_list)

    feature_list           go to state 22
    no_empty_feature_list  go to state 15
    feature                go to state 16


State 18

   11 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' no_empty_expr '}'

    OBJECTID  shift, and go to state 23

    $default  reduce using rule 16 (formal_list)

    formal_list           go to state 24
    no_empty_formal_list  go to state 25
    formal                go to state 26


State 19

   12 feature: OBJECTID ':' . TYPEID
   13        | OBJECTID ':' . TYPEID ASSIGN no_empty_expr

    TYPEID  shift, and go to state 27


State 20

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 28


State 21

    9 no_empty_feature_list: feature ';' .
   10                      | feature ';' . no_empty_feature_list

    error     shift, and go to state 12
    OBJECTID  shift, and go to state 13

    '}'  reduce using rule 9 (no_empty_feature_list)

    no_empty_feature_list  go to state 29
    feature                go to state 16


State 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'

    '}'  shift, and go to state 30


State 23

   19 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 31


State 24

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' no_empty_expr '}'

    ')'  shift, and go to state 32


State 25

   15 formal_list: no_empty_formal_list .
   18 no_empty_formal_list: no_empty_formal_list . ',' formal

    ','  shift, and go to state 33

    $default  reduce using rule 15 (formal_list)


State 26

   17 no_empty_formal_list: formal .

    $default  reduce using rule 17 (no_empty_formal_list)


State 27

   12 feature: OBJECTID ':' TYPEID .
   13        | OBJECTID ':' TYPEID . ASSIGN no_empty_expr

    ASSIGN  shift, and go to state 34

    $default  reduce using rule 12 (feature)


State 28

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


State 29

   10 no_empty_feature_list: feature ';' no_empty_feature_list .

    $default  reduce using rule 10 (no_empty_feature_list)


State 30

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 35


State 31

   19 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 36


State 32

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' no_empty_expr '}'

    ':'  shift, and go to state 37


State 33

   18 no_empty_formal_list: no_empty_formal_list ',' . formal

    OBJECTID  shift, and go to state 23

    formal  go to state 38


State 34

   13 feature: OBJECTID ':' TYPEID ASSIGN . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 54


State 35

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


State 36

   19 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 19 (formal)


State 37

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' no_empty_expr '}'

    TYPEID  shift, and go to state 55


State 38

   18 no_empty_formal_list: no_empty_formal_list ',' formal .

    $default  reduce using rule 18 (no_empty_formal_list)


State 39

   58 no_empty_expr: error .

    $default  reduce using rule 58 (no_empty_expr)


State 40

   36 no_empty_expr: IF . no_empty_expr THEN no_empty_expr ELSE no_empty_expr FI

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 56


State 41

   40 no_empty_expr: LET . let_

    OBJECTID  shift, and go to state 57

    let_  go to state 58


State 42

   37 no_empty_expr: WHILE . no_empty_expr LOOP no_empty_expr POOL
   38              | WHILE . no_empty_expr LOOP error

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 59


State 43

   41 no_empty_expr: CASE . no_empty_expr OF case_list ESAC

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 60


State 44

   42 no_empty_expr: NEW . TYPEID

    TYPEID  shift, and go to state 61


State 45

   43 no_empty_expr: ISVOID . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 62


State 46

   56 no_empty_expr: STR_CONST .

    $default  reduce using rule 56 (no_empty_expr)


State 47

   55 no_empty_expr: INT_CONST .

    $default  reduce using rule 55 (no_empty_expr)


State 48

   57 no_empty_expr: BOOL_CONST .

    $default  reduce using rule 57 (no_empty_expr)


State 49

   32 no_empty_expr: OBJECTID . ASSIGN no_empty_expr
   35              | OBJECTID . '(' expression_list ')'
   54              | OBJECTID .

    ASSIGN  shift, and go to state 63
    '('     shift, and go to state 64

    $default  reduce using rule 54 (no_empty_expr)


State 50

   52 no_empty_expr: NOT . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 65


State 51

   48 no_empty_expr: '~' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 66


State 52

   39 no_empty_expr: '{' . block '}'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    block          go to state 67
    no_empty_expr  go to state 68


State 53

   53 no_empty_expr: '(' . no_empty_expr ')'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 69


State 54

   13 feature: OBJECTID ':' TYPEID ASSIGN no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 13 (feature)


State 55

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' no_empty_expr '}'

    '{'  shift, and go to state 79


State 56

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   36              | IF no_empty_expr . THEN no_empty_expr ELSE no_empty_expr FI
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    THEN  shift, and go to state 80
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


State 57

   28 let_: OBJECTID . ':' TYPEID IN no_empty_expr
   29     | OBJECTID . ':' TYPEID ASSIGN no_empty_expr IN no_empty_expr
   30     | OBJECTID . ':' TYPEID ',' let_
   31     | OBJECTID . ':' TYPEID ASSIGN no_empty_expr ',' let_

    ':'  shift, and go to state 81


State 58

   40 no_empty_expr: LET let_ .

    $default  reduce using rule 40 (no_empty_expr)


State 59

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   37              | WHILE no_empty_expr . LOOP no_empty_expr POOL
   38              | WHILE no_empty_expr . LOOP error
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LOOP  shift, and go to state 82
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


State 60

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   41              | CASE no_empty_expr . OF case_list ESAC
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    OF   shift, and go to state 83
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78


State 61

   42 no_empty_expr: NEW TYPEID .

    $default  reduce using rule 42 (no_empty_expr)


State 62

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   43              | ISVOID no_empty_expr .
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 43 (no_empty_expr)


State 63

   32 no_empty_expr: OBJECTID ASSIGN . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 84


State 64

   35 no_empty_expr: OBJECTID '(' . expression_list ')'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    ')'  reduce using rule 22 (expression_list)
    ','  reduce using rule 22 (expression_list)

    expression_list  go to state 85
    no_empty_expr    go to state 86


State 65

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr
   52              | NOT no_empty_expr .

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 52 (no_empty_expr)


State 66

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   48              | '~' no_empty_expr .
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 48 (no_empty_expr)


State 67

   24 block: block . no_empty_expr ';'
   39 no_empty_expr: '{' block . '}'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '}'         shift, and go to state 87
    '('         shift, and go to state 53

    no_empty_expr  go to state 88


State 68

   23 block: no_empty_expr . ';'
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ';'  shift, and go to state 89


State 69

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr
   53              | '(' no_empty_expr . ')'

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ')'  shift, and go to state 90


State 70

   50 no_empty_expr: no_empty_expr LE . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 91


State 71

   49 no_empty_expr: no_empty_expr '<' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 92


State 72

   51 no_empty_expr: no_empty_expr '=' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 93


State 73

   44 no_empty_expr: no_empty_expr '+' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 94


State 74

   45 no_empty_expr: no_empty_expr '-' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 95


State 75

   46 no_empty_expr: no_empty_expr '*' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 96


State 76

   47 no_empty_expr: no_empty_expr '/' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 97


State 77

   34 no_empty_expr: no_empty_expr '@' . TYPEID '.' OBJECTID '(' expression_list ')'

    TYPEID  shift, and go to state 98


State 78

   33 no_empty_expr: no_empty_expr '.' . OBJECTID '(' expression_list ')'

    OBJECTID  shift, and go to state 99


State 79

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . no_empty_expr '}'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 100


State 80

   36 no_empty_expr: IF no_empty_expr THEN . no_empty_expr ELSE no_empty_expr FI

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 101


State 81

   28 let_: OBJECTID ':' . TYPEID IN no_empty_expr
   29     | OBJECTID ':' . TYPEID ASSIGN no_empty_expr IN no_empty_expr
   30     | OBJECTID ':' . TYPEID ',' let_
   31     | OBJECTID ':' . TYPEID ASSIGN no_empty_expr ',' let_

    TYPEID  shift, and go to state 102


State 82

   37 no_empty_expr: WHILE no_empty_expr LOOP . no_empty_expr POOL
   38              | WHILE no_empty_expr LOOP . error

    error       shift, and go to state 103
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 104


State 83

   41 no_empty_expr: CASE no_empty_expr OF . case_list ESAC

    OBJECTID  shift, and go to state 105

    case_list  go to state 106
    branch     go to state 107


State 84

   32 no_empty_expr: OBJECTID ASSIGN no_empty_expr .
   33              | no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 32 (no_empty_expr)


State 85

   21 expression_list: expression_list . ',' no_empty_expr
   35 no_empty_expr: OBJECTID '(' expression_list . ')'

    ')'  shift, and go to state 108
    ','  shift, and go to state 109


State 86

   20 expression_list: no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 20 (expression_list)


State 87

   39 no_empty_expr: '{' block '}' .

    $default  reduce using rule 39 (no_empty_expr)


State 88

   24 block: block no_empty_expr . ';'
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ';'  shift, and go to state 110


State 89

   23 block: no_empty_expr ';' .

    $default  reduce using rule 23 (block)


State 90

   53 no_empty_expr: '(' no_empty_expr ')' .

    $default  reduce using rule 53 (no_empty_expr)


State 91

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   50              | no_empty_expr LE no_empty_expr .
   51              | no_empty_expr . '=' no_empty_expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 50 (no_empty_expr)


State 92

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   49              | no_empty_expr '<' no_empty_expr .
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 49 (no_empty_expr)


State 93

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr
   51              | no_empty_expr '=' no_empty_expr .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 51 (no_empty_expr)


State 94

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   44              | no_empty_expr '+' no_empty_expr .
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 44 (no_empty_expr)


State 95

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   45              | no_empty_expr '-' no_empty_expr .
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 45 (no_empty_expr)


State 96

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   46              | no_empty_expr '*' no_empty_expr .
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 46 (no_empty_expr)


State 97

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   47              | no_empty_expr '/' no_empty_expr .
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 47 (no_empty_expr)


State 98

   34 no_empty_expr: no_empty_expr '@' TYPEID . '.' OBJECTID '(' expression_list ')'

    '.'  shift, and go to state 111


State 99

   33 no_empty_expr: no_empty_expr '.' OBJECTID . '(' expression_list ')'

    '('  shift, and go to state 112


State 100

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' no_empty_expr . '}'
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    '}'  shift, and go to state 113


State 101

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   36              | IF no_empty_expr THEN no_empty_expr . ELSE no_empty_expr FI
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    ELSE  shift, and go to state 114
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


State 102

   28 let_: OBJECTID ':' TYPEID . IN no_empty_expr
   29     | OBJECTID ':' TYPEID . ASSIGN no_empty_expr IN no_empty_expr
   30     | OBJECTID ':' TYPEID . ',' let_
   31     | OBJECTID ':' TYPEID . ASSIGN no_empty_expr ',' let_

    IN      shift, and go to state 115
    ASSIGN  shift, and go to state 116
    ','     shift, and go to state 117


State 103

   38 no_empty_expr: WHILE no_empty_expr LOOP error .
   58              | error .

    POOL      reduce using rule 38 (no_empty_expr)
    POOL      [reduce using rule 58 (no_empty_expr)]
    LE        reduce using rule 38 (no_empty_expr)
    LE        [reduce using rule 58 (no_empty_expr)]
    '<'       reduce using rule 38 (no_empty_expr)
    '<'       [reduce using rule 58 (no_empty_expr)]
    '='       reduce using rule 38 (no_empty_expr)
    '='       [reduce using rule 58 (no_empty_expr)]
    '+'       reduce using rule 38 (no_empty_expr)
    '+'       [reduce using rule 58 (no_empty_expr)]
    '-'       reduce using rule 38 (no_empty_expr)
    '-'       [reduce using rule 58 (no_empty_expr)]
    '*'       reduce using rule 38 (no_empty_expr)
    '*'       [reduce using rule 58 (no_empty_expr)]
    '/'       reduce using rule 38 (no_empty_expr)
    '/'       [reduce using rule 58 (no_empty_expr)]
    '@'       reduce using rule 38 (no_empty_expr)
    '@'       [reduce using rule 58 (no_empty_expr)]
    '.'       reduce using rule 38 (no_empty_expr)
    '.'       [reduce using rule 58 (no_empty_expr)]
    $default  reduce using rule 38 (no_empty_expr)


State 104

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   37              | WHILE no_empty_expr LOOP no_empty_expr . POOL
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    POOL  shift, and go to state 118
    LE    shift, and go to state 70
    '<'   shift, and go to state 71
    '='   shift, and go to state 72
    '+'   shift, and go to state 73
    '-'   shift, and go to state 74
    '*'   shift, and go to state 75
    '/'   shift, and go to state 76
    '@'   shift, and go to state 77
    '.'   shift, and go to state 78


State 105

   27 branch: OBJECTID . ':' TYPEID DARROW no_empty_expr

    ':'  shift, and go to state 119


State 106

   26 case_list: case_list . branch ';'
   41 no_empty_expr: CASE no_empty_expr OF case_list . ESAC

    ESAC      shift, and go to state 120
    OBJECTID  shift, and go to state 105

    branch  go to state 121


State 107

   25 case_list: branch . ';'

    ';'  shift, and go to state 122


State 108

   35 no_empty_expr: OBJECTID '(' expression_list ')' .

    $default  reduce using rule 35 (no_empty_expr)


State 109

   21 expression_list: expression_list ',' . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 123


State 110

   24 block: block no_empty_expr ';' .

    $default  reduce using rule 24 (block)


State 111

   34 no_empty_expr: no_empty_expr '@' TYPEID '.' . OBJECTID '(' expression_list ')'

    OBJECTID  shift, and go to state 124


State 112

   33 no_empty_expr: no_empty_expr '.' OBJECTID '(' . expression_list ')'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    ')'  reduce using rule 22 (expression_list)
    ','  reduce using rule 22 (expression_list)

    expression_list  go to state 125
    no_empty_expr    go to state 86


State 113

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' no_empty_expr '}' .

    $default  reduce using rule 11 (feature)


State 114

   36 no_empty_expr: IF no_empty_expr THEN no_empty_expr ELSE . no_empty_expr FI

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 126


State 115

   28 let_: OBJECTID ':' TYPEID IN . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 127


State 116

   29 let_: OBJECTID ':' TYPEID ASSIGN . no_empty_expr IN no_empty_expr
   31     | OBJECTID ':' TYPEID ASSIGN . no_empty_expr ',' let_

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 128


State 117

   30 let_: OBJECTID ':' TYPEID ',' . let_

    OBJECTID  shift, and go to state 57

    let_  go to state 129


State 118

   37 no_empty_expr: WHILE no_empty_expr LOOP no_empty_expr POOL .

    $default  reduce using rule 37 (no_empty_expr)


State 119

   27 branch: OBJECTID ':' . TYPEID DARROW no_empty_expr

    TYPEID  shift, and go to state 130


State 120

   41 no_empty_expr: CASE no_empty_expr OF case_list ESAC .

    $default  reduce using rule 41 (no_empty_expr)


State 121

   26 case_list: case_list branch . ';'

    ';'  shift, and go to state 131


State 122

   25 case_list: branch ';' .

    $default  reduce using rule 25 (case_list)


State 123

   21 expression_list: expression_list ',' no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 21 (expression_list)


State 124

   34 no_empty_expr: no_empty_expr '@' TYPEID '.' OBJECTID . '(' expression_list ')'

    '('  shift, and go to state 132


State 125

   21 expression_list: expression_list . ',' no_empty_expr
   33 no_empty_expr: no_empty_expr '.' OBJECTID '(' expression_list . ')'

    ')'  shift, and go to state 133
    ','  shift, and go to state 109


State 126

   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   36              | IF no_empty_expr THEN no_empty_expr ELSE no_empty_expr . FI
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    FI   shift, and go to state 134
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78


State 127

   28 let_: OBJECTID ':' TYPEID IN no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE        [reduce using rule 28 (let_)]
    '<'       [reduce using rule 28 (let_)]
    '='       [reduce using rule 28 (let_)]
    '+'       [reduce using rule 28 (let_)]
    '-'       [reduce using rule 28 (let_)]
    '*'       [reduce using rule 28 (let_)]
    '/'       [reduce using rule 28 (let_)]
    '@'       [reduce using rule 28 (let_)]
    '.'       [reduce using rule 28 (let_)]
    $default  reduce using rule 28 (let_)


State 128

   29 let_: OBJECTID ':' TYPEID ASSIGN no_empty_expr . IN no_empty_expr
   31     | OBJECTID ':' TYPEID ASSIGN no_empty_expr . ',' let_
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    IN   shift, and go to state 135
    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78
    ','  shift, and go to state 136


State 129

   30 let_: OBJECTID ':' TYPEID ',' let_ .

    $default  reduce using rule 30 (let_)


State 130

   27 branch: OBJECTID ':' TYPEID . DARROW no_empty_expr

    DARROW  shift, and go to state 137


State 131

   26 case_list: case_list branch ';' .

    $default  reduce using rule 26 (case_list)


State 132

   34 no_empty_expr: no_empty_expr '@' TYPEID '.' OBJECTID '(' . expression_list ')'

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    ')'  reduce using rule 22 (expression_list)
    ','  reduce using rule 22 (expression_list)

    expression_list  go to state 138
    no_empty_expr    go to state 86


State 133

   33 no_empty_expr: no_empty_expr '.' OBJECTID '(' expression_list ')' .

    $default  reduce using rule 33 (no_empty_expr)


State 134

   36 no_empty_expr: IF no_empty_expr THEN no_empty_expr ELSE no_empty_expr FI .

    $default  reduce using rule 36 (no_empty_expr)


State 135

   29 let_: OBJECTID ':' TYPEID ASSIGN no_empty_expr IN . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 139


State 136

   31 let_: OBJECTID ':' TYPEID ASSIGN no_empty_expr ',' . let_

    OBJECTID  shift, and go to state 57

    let_  go to state 140


State 137

   27 branch: OBJECTID ':' TYPEID DARROW . no_empty_expr

    error       shift, and go to state 39
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    no_empty_expr  go to state 141


State 138

   21 expression_list: expression_list . ',' no_empty_expr
   34 no_empty_expr: no_empty_expr '@' TYPEID '.' OBJECTID '(' expression_list . ')'

    ')'  shift, and go to state 142
    ','  shift, and go to state 109


State 139

   29 let_: OBJECTID ':' TYPEID ASSIGN no_empty_expr IN no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    LE        [reduce using rule 29 (let_)]
    '<'       [reduce using rule 29 (let_)]
    '='       [reduce using rule 29 (let_)]
    '+'       [reduce using rule 29 (let_)]
    '-'       [reduce using rule 29 (let_)]
    '*'       [reduce using rule 29 (let_)]
    '/'       [reduce using rule 29 (let_)]
    '@'       [reduce using rule 29 (let_)]
    '.'       [reduce using rule 29 (let_)]
    $default  reduce using rule 29 (let_)


State 140

   31 let_: OBJECTID ':' TYPEID ASSIGN no_empty_expr ',' let_ .

    $default  reduce using rule 31 (let_)


State 141

   27 branch: OBJECTID ':' TYPEID DARROW no_empty_expr .
   33 no_empty_expr: no_empty_expr . '.' OBJECTID '(' expression_list ')'
   34              | no_empty_expr . '@' TYPEID '.' OBJECTID '(' expression_list ')'
   44              | no_empty_expr . '+' no_empty_expr
   45              | no_empty_expr . '-' no_empty_expr
   46              | no_empty_expr . '*' no_empty_expr
   47              | no_empty_expr . '/' no_empty_expr
   49              | no_empty_expr . '<' no_empty_expr
   50              | no_empty_expr . LE no_empty_expr
   51              | no_empty_expr . '=' no_empty_expr

    LE   shift, and go to state 70
    '<'  shift, and go to state 71
    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '@'  shift, and go to state 77
    '.'  shift, and go to state 78

    $default  reduce using rule 27 (branch)


State 142

   34 no_empty_expr: no_empty_expr '@' TYPEID '.' OBJECTID '(' expression_list ')' .

    $default  reduce using rule 34 (no_empty_expr)
